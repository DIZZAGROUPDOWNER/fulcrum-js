{"version":3,"sources":["../src/index.js"],"names":["email","password","api","auth","get","resp","err","user","body","contexts","map","context","api_token","getUser","organizationId","note","timeout","authorizationObj","authorization","organization_id","post","createAuthorization","Client","Page","baseURI","headers"],"mappings":";;;;;;;;;;;;;;;;sFAeO,iBAAuBA,KAAvB,EAA8BC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcC,IAAIC,IAAJ,CAASH,KAAT,EAAgBC,QAAhB,EAA0BG,GAA1B,CAA8B,QAA9B,CADd;;AAAA;AACCC,gBADD;;AAAA,iBAGDA,KAAKC,GAHJ;AAAA;AAAA;AAAA;;AAAA,kBAIGD,KAAKC,GAJR;;AAAA;AAOCC,gBAPD,GAOQF,KAAKG,IAAL,CAAUD,IAPlB;;;AASLA,iBAAKE,QAAL,GAAgBF,KAAKE,QAAL,CAAcC,GAAd,CAAkB,UAACC,OAAD,EAAa;AAC7C;AACA;AACA;AACA,qBAAOA,QAAQC,SAAf;;AAEA,qBAAOD,OAAP;AACD,aAPe,CAAhB;;AATK,6CAkBEJ,IAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeM,O;;;;;;uFAqBf,kBAAmCb,KAAnC,EAA0CC,QAA1C,EAAoDa,cAApD,EAAoEC,IAApE,EAA0EC,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,4BADD,GACoB;AACvBC,6BAAe;AACbC,iCAAiBL,cADJ;AAEbC,sBAAMA,IAFO;AAGbC,yBAASA;AAHI;AADQ,aADpB;AAAA;AAAA,mBAScd,IAAIC,IAAJ,CAASH,KAAT,EAAgBC,QAAhB,EAA0BmB,IAA1B,CAA+B,iBAA/B,EAAkD;AACnEZ,oBAAMS;AAD6D,aAAlD,CATd;;AAAA;AASCZ,gBATD;;AAAA,iBAaDA,KAAKC,GAbJ;AAAA;AAAA;AAAA;;AAAA,kBAcGD,KAAKC,GAdR;;AAAA;AAAA,8CAiBED,KAAKG,IAAL,CAAUU,aAjBZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeG,mB;;;;;AApCtB;;;;AACA;;;;AACA;;;;;;QAESC,M;QACAC,I;;;AAET,IAAMrB,MAAM,sBAAY;AACtBsB,WAAS,mCADa;AAEtBC,WAAS;AACP,cAAU,kBADH;AAEP,oBAAgB;AAFT;AAFa,CAAZ,CAAZ","file":"index.js","sourcesContent":["import Frisbee from 'frisbee';\nimport Client from './client';\nimport Page from './page';\n\nexport { Client };\nexport { Page };\n\nconst api = new Frisbee({\n  baseURI: 'https://api.fulcrumapp.com/api/v2',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport async function getUser(email, password) {\n  const resp = await api.auth(email, password).get('/users');\n\n  if (resp.err) {\n    throw resp.err;\n  }\n\n  const user = resp.body.user;\n\n  user.contexts = user.contexts.map((context) => {\n    // To avoid confusion remove the old API tokens. These will\n    // be deprecated eventually, and authorizations have been\n    // the way to create tokens for a while now.\n    delete context.api_token;\n\n    return context;\n  });\n\n  return user;\n}\n\nexport async function createAuthorization(email, password, organizationId, note, timeout) {\n  const authorizationObj = {\n    authorization: {\n      organization_id: organizationId,\n      note: note,\n      timeout: timeout\n    }\n  };\n\n  const resp = await api.auth(email, password).post('/authorizations', {\n    body: authorizationObj\n  });\n\n  if (resp.err) {\n    throw resp.err;\n  }\n\n  return resp.body.authorization;\n}\n"]}