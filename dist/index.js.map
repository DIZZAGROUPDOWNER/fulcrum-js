{"version":3,"sources":["../src/index.js"],"names":["email","password","api","auth","get","resp","err","body","user","getUser","organizationId","note","timeout","authorizationObj","authorization","organization_id","post","createAuthorization","Client","Page","baseURI","headers"],"mappings":";;;;;;;;;;;;;;;;sFAeO,iBAAuBA,KAAvB,EAA8BC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACcC,IAAIC,IAAJ,CAASH,KAAT,EAAgBC,QAAhB,EAA0BG,GAA1B,CAA8B,QAA9B,CADd;;AAAA;AACCC,gBADD;;AAAA,iBAGDA,KAAKC,GAHJ;AAAA;AAAA;AAAA;;AAAA,kBAIGD,KAAKC,GAJR;;AAAA;AAAA,6CAOED,KAAKE,IAAL,CAAUC,IAPZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,O;;;;;;uFAUf,kBAAmCT,KAAnC,EAA0CC,QAA1C,EAAoDS,cAApD,EAAoEC,IAApE,EAA0EC,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,4BADD,GACoB;AACvBC,6BAAe;AACbC,iCAAiBL,cADJ;AAEbC,sBAAMA,IAFO;AAGbC,yBAASA;AAHI;AADQ,aADpB;AAAA;AAAA,mBAScV,IAAIC,IAAJ,CAASH,KAAT,EAAgBC,QAAhB,EAA0Be,IAA1B,CAA+B,iBAA/B,EAAkD;AACnET,oBAAMM;AAD6D,aAAlD,CATd;;AAAA;AASCR,gBATD;;AAAA,iBAaDA,KAAKC,GAbJ;AAAA;AAAA;AAAA;;AAAA,kBAcGD,KAAKC,GAdR;;AAAA;AAAA,8CAiBED,KAAKE,IAAL,CAAUO,aAjBZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeG,mB;;;;;AAzBtB;;;;AACA;;;;AACA;;;;;;QAESC,M;QACAC,I;;;AAET,IAAMjB,MAAM,sBAAY;AACtBkB,WAAS,mCADa;AAEtBC,WAAS;AACP,cAAU,kBADH;AAEP,oBAAgB;AAFT;AAFa,CAAZ,CAAZ","file":"index.js","sourcesContent":["import Frisbee from 'frisbee';\nimport Client from './client';\nimport Page from './page';\n\nexport { Client };\nexport { Page };\n\nconst api = new Frisbee({\n  baseURI: 'https://api.fulcrumapp.com/api/v2',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport async function getUser(email, password) {\n  const resp = await api.auth(email, password).get('/users');\n\n  if (resp.err) {\n    throw resp.err;\n  }\n\n  return resp.body.user;\n}\n\nexport async function createAuthorization(email, password, organizationId, note, timeout) {\n  const authorizationObj = {\n    authorization: {\n      organization_id: organizationId,\n      note: note,\n      timeout: timeout\n    }\n  };\n\n  const resp = await api.auth(email, password).post('/authorizations', {\n    body: authorizationObj\n  });\n\n  if (resp.err) {\n    throw resp.err;\n  }\n\n  return resp.body.authorization;\n}\n"]}