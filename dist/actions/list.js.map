{"version":3,"sources":["../../src/actions/list.js"],"names":["DEFAULT_PER_PAGE","List","params","options","body","defaultListParams","client","api","get","collectionPath","resp","err","resourcesName","per_page"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,IAAzB;;IAEqBC,I;;;;;;;;;;;2GAKTC,M;;;;;;AACFC,uB,GAAU;AACdC,wBAAMF,UAAU,KAAKG;AADP,iB;;uBAIG,KAAKC,MAAL,CAAYC,GAAZ,CAAgBC,GAAhB,CAAoB,KAAKC,cAAL,EAApB,EAA2CN,OAA3C,C;;;AAAbO,oB;;qBACFA,KAAKC,G;;;;;sBACDD,KAAKC,G;;;iDAGN,mBAASD,KAAKN,IAAd,EAAoB,KAAKQ,aAAzB,C;;;;;;;;;;;;;;;;;;wBAde;AACtB,aAAO,EAAEC,UAAUb,gBAAZ,EAAP;AACD;;;;;kBAHkBC,I","file":"list.js","sourcesContent":["import Mixin from 'mixmatch';\nimport Page from '../page';\n\nconst DEFAULT_PER_PAGE = 1000;\n\nexport default class List extends Mixin {\n  get defaultListParams() {\n    return { per_page: DEFAULT_PER_PAGE };\n  }\n\n  async all(params) {\n    const options = {\n      body: params || this.defaultListParams\n    };\n\n    const resp = await this.client.api.get(this.collectionPath(), options);\n    if (resp.err) {\n      throw resp.err;\n    }\n\n    return new Page(resp.body, this.resourcesName);\n  }\n}\n"]}